(()=>{"use strict";class t{showModal(t,e,i){document.querySelector(".modal")||(this.createModal(t,e,i),document.body.appendChild(this.modal),this.btnOk=this.modal.querySelector(".button__ok"),this.btnCancel=this.modal.querySelector(".button__cancel"),this.btnOk.addEventListener("click",this.onSaveTicket),this.btnCancel.addEventListener("click",this.onCancelModal))}onSaveTicket(t){t.preventDefault();let{modal:e}=this.modal;return e.querySelector(".form-field")?(this.name=e.querySelector(".name").value,""===this.name?(e.querySelector(".name").style.background="#dba1a1",void setTimeout((()=>{e.querySelector(".name").style.background="#fdfdfd"}),800)):(this.description=e.querySelector(".description").value,""===this.description?(e.querySelector(".description").style.background="#dba1a1",void setTimeout((()=>{e.querySelector(".description").style.background="#fdfdfd"}),800)):("createTicket"===this.method&&this.createTicket(),"editTicket"===this.method&&this.editTicket(),document.body.removeChild(e),void(e=null)))):(this.deleteTicket(this.delId,this.delTicket),document.body.removeChild(e),void(e=null))}onCancelModal(t){t.preventDefault(),this.btnOk.removeEventListener("click",this.onSaveTicket),this.btnCancel.removeEventListener("click",this.onCancelModal),document.body.removeChild(this.modal),this.modal=null,this.name=null,this.description=null}createModal(t,e,i){this.modal=document.createElement("div"),this.modal.classList.add("modal");let s="";s="Удалить тикет"===t?'\n         <div class="form-text">Вы уверены, что хотите удалить тикет? Это действие необратимо.</div>\n         ':`<div class="form-field">\n         <label for="name" class="form-field__label">Краткое описание</label>\n         <textarea type="text" id="name" class="form-field__text name" required>${e||""}</textarea>\n       </div>\n       <div class="form-field">\n         <label for="description" class="form-field__label">Подробное описание</label>\n         <textarea type="text" id="description" class="form-field__text description" required>${i||""}</textarea>\n       </div>`,this.modal.innerHTML=`\n        <div class="modal__wrapper">\n          <div class="modal__content">\n            <h3 class="modal__title">${t}</h3>\n            <form class="form">\n                ${s}\n                <div class="form__control">\n                  <button class="form-control__button button button__cancel">Отмена</button>\n                  <button class="form-control__button button button__ok">Ok</button>\n                </div>\n            </form> \n          </div>\n        </div>\n        `}}function e(t){return new Promise(((e,i)=>{const s=new XMLHttpRequest,{method:n}=t;let o=function(t){const e=new URLSearchParams;return e.append("method",t.method),t.id&&e.append("id",t.id),`/?${e}`}(t),d="GET",c=new FormData;"createTicket"!==n&&"changeStatus"!==n&&"deleteTicket"!==n&&"editTicket"!==n||(d="POST",o="",c=function(t){const e=new FormData;return e.append("method",t.method),t.id&&e.append("id",t.id),e.append("name",t.name),e.append("description",t.description),e}(t)),s.open(d,"http://localhost:7070"+o),s.addEventListener("load",(()=>{if(s.status>=200&&s.status<300)try{if(s.response){const t=JSON.parse(s.response);e(t)}}catch(t){i(t)}else i(new Error(`${s.status}: ${s.responseText}`))})),s.send(c)}))}new class{constructor(e){"string"==typeof e&&(e=document.querySelector(e)),this.modal=new t,this.element=e,this.submitBtn=this.element.querySelector(".helpdesk__button"),this.ticketsList=this.element.querySelector(".helpdesk__list"),this.onClick=this.onClick.bind(this),this.onClickAdd=this.onClickAdd.bind(this),this.createTicket=this.createTicket.bind(this),this.onClickEdit=this.onClickEdit.bind(this),this.onClickDelete=this.onClickDelete.bind(this),this.getTicketsList=this.getTicketsList.bind(this),this.modal.showModal=this.modal.showModal.bind(this.modal),this.modal.createModal=this.modal.createModal.bind(this.modal),this.modal.onSaveTicket=this.modal.onSaveTicket.bind(this),this.modal.onCancelModal=this.modal.onCancelModal.bind(this.modal)}bindToDOM(){this.element.addEventListener("click",this.onClick),this.getTicketsList()}getTicketsList(){try{e({method:"allTickets"}).then((t=>{this.tickets=t,this.renderTicketsList(this.tickets)}))}catch(t){console.error(t)}}renderTicketsList(t){this.ticketsList.innerHTML="",t.forEach((t=>{const e=function(t){let e=new Date(t);return e=e.toLocaleString("ru"),e=e.substr(0,17).replace(",",""),e}(t.created),i=function(t,e){return`\n  <div class="ticket__status circle"></div>\n  <div class="ticket__description">\n    <div class="ticket__description-name">${t}</div>\n    <div class="ticket__description-full"></div>\n  </div>\n  <div class="ticket__date">${e}</div>\n  <div class="ticket__controll">\n    <div class="ticket__controll-edit circle">✎</div>\n    <div class="ticket__controll-delete circle">✘</div>\n  </div>`}(t.name,e),s=document.createElement("div");s.classList.add("ticket"),s.setAttribute("data-id",t.id),s.innerHTML=i,this.ticketsList.appendChild(s),!0===t.status&&(s.querySelector(".ticket__status").textContent="✔")}))}onClick(t){const{target:e}=t;if(e.classList.contains("helpdesk__button"))return void this.onClickAdd();if(!e.closest(".ticket"))return;const i=e.closest(".ticket"),{id:s}=i.dataset;e.classList.contains("ticket__status")?this.changeStatus(s,i):e.classList.contains("ticket__controll-edit")?this.onClickEdit(s,i):e.classList.contains("ticket__controll-delete")?this.onClickDelete(s):e.closest(".ticket")&&this.getDescription(s,i)}onClickAdd(){this.method="createTicket",this.modal.showModal("Добавить тикет")}async changeStatus(t,i){this.method="changeStatus",e({method:this.method,id:t}).then((t=>{!0===t&&(i.querySelector(".ticket__status").textContent="✔"),!1===t&&(i.querySelector(".ticket__status").textContent="")}))}async getDescription(t,i){const s=i.querySelector(".ticket__description-full");""===s.textContent?(this.method="ticketById",e({method:this.method,id:t}).then((t=>{s.textContent=t.description}))):s.classList.toggle("hidden")}async createTicket(){e({method:this.method,name:this.name,description:this.description,id:null}).then((()=>{this.getTicketsList()}))}onClickEdit(t,e){const i=e.querySelector(".ticket__description-name").textContent,s=e.querySelector(".ticket__description-full").textContent;this.method="editTicket",this.id=t,this.modal.showModal("Изменить тикет",i,s)}editTicket(){e({method:this.method,name:this.name,description:this.description,id:this.id}).then((()=>{this.getTicketsList()}))}onClickDelete(t){this.modal.showModal("Удалить тикет"),this.delId=t}async deleteTicket(t){this.method="deleteTicket",e({method:this.method,id:t}).then((()=>{this.getTicketsList()}))}}(".helpdesk").bindToDOM()})();